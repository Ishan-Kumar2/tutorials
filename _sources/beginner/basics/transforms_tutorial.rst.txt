
.. DO NOT EDIT.
.. THIS FILE WAS AUTOMATICALLY GENERATED BY SPHINX-GALLERY.
.. TO MAKE CHANGES, EDIT THE SOURCE PYTHON FILE:
.. "beginner/basics/transforms_tutorial.py"
.. LINE NUMBERS ARE GIVEN BELOW.

.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        Click :ref:`here <sphx_glr_download_beginner_basics_transforms_tutorial.py>`
        to download the full example code

.. rst-class:: sphx-glr-example-title

.. _sphx_glr_beginner_basics_transforms_tutorial.py:


`Learn the Basics <intro.html>`_ ||
`Quickstart <quickstart_tutorial.html>`_ ||
`Tensors <tensorqs_tutorial.html>`_ ||
`Datasets & DataLoaders <data_tutorial.html>`_ ||
**Transforms** ||
`Build Model <buildmodel_tutorial.html>`_ ||
`Autograd <autogradqs_tutorial.html>`_ ||
`Optimization <optimization_tutorial.html>`_ ||
`Save & Load Model <saveloadrun_tutorial.html>`_

Transforms
===================

Data does not always come in its final processed form that is required for
training machine learning algorithms. We use **transforms** to perform some
manipulation of the data and make it suitable for training.

All TorchVision datasets have two parameters -``transform`` to modify the features and
``target_transform`` to modify the labels - that accept callables containing the transformation logic.
The `torchvision.transforms <https://pytorch.org/vision/stable/transforms.html>`_ module offers
several commonly-used transforms out of the box.

The FashionMNIST features are in PIL Image format, and the labels are integers.
For training, we need the features as normalized tensors, and the labels as one-hot encoded tensors.
To make these transformations, we use ``ToTensor`` and ``Lambda``.

.. GENERATED FROM PYTHON SOURCE LINES 28-41

.. code-block:: default


    import torch
    from torchvision import datasets
    from torchvision.transforms import ToTensor, Lambda

    ds = datasets.FashionMNIST(
        root="data",
        train=True,
        download=True,
        transform=ToTensor(),
        target_transform=Lambda(lambda y: torch.zeros(10, dtype=torch.float).scatter_(0, torch.tensor(y), value=1))
    )





.. rst-class:: sphx-glr-script-out

 .. code-block:: none

    Downloading http://fashion-mnist.s3-website.eu-central-1.amazonaws.com/train-images-idx3-ubyte.gz
    Downloading http://fashion-mnist.s3-website.eu-central-1.amazonaws.com/train-images-idx3-ubyte.gz to data/FashionMNIST/raw/train-images-idx3-ubyte.gz

      0%|          | 0/26421880 [00:00<?, ?it/s]
      0%|          | 65536/26421880 [00:00<01:13, 360774.30it/s]
      0%|          | 131072/26421880 [00:00<01:12, 360506.82it/s]
      1%|          | 196608/26421880 [00:00<01:12, 360303.84it/s]
      1%|          | 262144/26421880 [00:00<01:12, 360361.81it/s]
      1%|1         | 327680/26421880 [00:00<01:12, 360837.60it/s]
      2%|1         | 425984/26421880 [00:01<01:01, 421871.01it/s]
      2%|1         | 524288/26421880 [00:01<00:56, 460513.73it/s]
      2%|2         | 622592/26421880 [00:01<00:53, 486455.78it/s]
      3%|2         | 753664/26421880 [00:01<00:45, 559011.24it/s]
      3%|3         | 884736/26421880 [00:01<00:41, 609755.22it/s]
      4%|3         | 1015808/26421880 [00:01<00:39, 644999.92it/s]
      4%|4         | 1179648/26421880 [00:02<00:34, 722499.88it/s]
      5%|5         | 1376256/26421880 [00:02<00:30, 830383.80it/s]
      6%|5         | 1540096/26421880 [00:02<00:26, 923201.75it/s]
      6%|6         | 1671168/26421880 [00:02<00:26, 932186.57it/s]
      7%|7         | 1867776/26421880 [00:02<00:24, 983443.07it/s]
      8%|8         | 2129920/26421880 [00:02<00:21, 1130156.55it/s]
      9%|9         | 2392064/26421880 [00:03<00:19, 1228883.76it/s]
     10%|#         | 2686976/26421880 [00:03<00:17, 1351603.33it/s]
     11%|#1        | 3014656/26421880 [00:03<00:15, 1490526.40it/s]
     13%|#2        | 3375104/26421880 [00:03<00:12, 1775741.55it/s]
     14%|#3        | 3604480/26421880 [00:03<00:13, 1750137.97it/s]
     15%|#5        | 3997696/26421880 [00:03<00:11, 1890008.15it/s]
     17%|#6        | 4456448/26421880 [00:04<00:09, 2276595.99it/s]
     18%|#7        | 4718592/26421880 [00:04<00:09, 2180314.43it/s]
     20%|#9        | 5242880/26421880 [00:04<00:07, 2648215.46it/s]
     21%|##        | 5537792/26421880 [00:04<00:08, 2511255.80it/s]
     23%|##3       | 6160384/26421880 [00:04<00:07, 2833991.38it/s]
     26%|##5       | 6848512/26421880 [00:04<00:06, 3153648.62it/s]
     29%|##8       | 7602176/26421880 [00:05<00:05, 3476536.03it/s]
     32%|###1      | 8421376/26421880 [00:05<00:04, 4125488.12it/s]
     34%|###3      | 8880128/26421880 [00:05<00:04, 3922082.84it/s]
     37%|###7      | 9830400/26421880 [00:05<00:03, 4366129.44it/s]
     41%|####1     | 10878976/26421880 [00:05<00:02, 5252113.09it/s]
     43%|####3     | 11468800/26421880 [00:05<00:02, 4997908.07it/s]
     48%|####7     | 12681216/26421880 [00:05<00:02, 6097383.41it/s]
     51%|#####     | 13369344/26421880 [00:06<00:02, 5795943.83it/s]
     56%|#####5    | 14745600/26421880 [00:06<00:01, 7051907.36it/s]
     59%|#####8    | 15532032/26421880 [00:06<00:01, 6678014.37it/s]
     65%|######4   | 17137664/26421880 [00:06<00:01, 8187823.87it/s]
     68%|######8   | 18087936/26421880 [00:06<00:01, 7818253.97it/s]
     75%|#######5  | 19922944/26421880 [00:06<00:00, 9511492.68it/s]
     79%|#######9  | 21004288/26421880 [00:06<00:00, 9035570.63it/s]
     88%|########7 | 23134208/26421880 [00:07<00:00, 11009369.34it/s]
     92%|#########2| 24346624/26421880 [00:07<00:00, 10386719.45it/s]
    100%|##########| 26421880/26421880 [00:07<00:00, 3634300.72it/s] 
    Extracting data/FashionMNIST/raw/train-images-idx3-ubyte.gz to data/FashionMNIST/raw

    Downloading http://fashion-mnist.s3-website.eu-central-1.amazonaws.com/train-labels-idx1-ubyte.gz
    Downloading http://fashion-mnist.s3-website.eu-central-1.amazonaws.com/train-labels-idx1-ubyte.gz to data/FashionMNIST/raw/train-labels-idx1-ubyte.gz

      0%|          | 0/29515 [00:00<?, ?it/s]
    100%|##########| 29515/29515 [00:00<00:00, 327048.05it/s]
    Extracting data/FashionMNIST/raw/train-labels-idx1-ubyte.gz to data/FashionMNIST/raw

    Downloading http://fashion-mnist.s3-website.eu-central-1.amazonaws.com/t10k-images-idx3-ubyte.gz
    Downloading http://fashion-mnist.s3-website.eu-central-1.amazonaws.com/t10k-images-idx3-ubyte.gz to data/FashionMNIST/raw/t10k-images-idx3-ubyte.gz

      0%|          | 0/4422102 [00:00<?, ?it/s]
      1%|1         | 65536/4422102 [00:00<00:12, 362868.90it/s]
      4%|4         | 196608/4422102 [00:00<00:07, 576128.37it/s]
     19%|#8        | 819200/4422102 [00:00<00:01, 1885286.24it/s]
     73%|#######3  | 3244032/4422102 [00:00<00:00, 6439478.22it/s]
    100%|##########| 4422102/4422102 [00:00<00:00, 6097516.83it/s]
    Extracting data/FashionMNIST/raw/t10k-images-idx3-ubyte.gz to data/FashionMNIST/raw

    Downloading http://fashion-mnist.s3-website.eu-central-1.amazonaws.com/t10k-labels-idx1-ubyte.gz
    Downloading http://fashion-mnist.s3-website.eu-central-1.amazonaws.com/t10k-labels-idx1-ubyte.gz to data/FashionMNIST/raw/t10k-labels-idx1-ubyte.gz

      0%|          | 0/5148 [00:00<?, ?it/s]
    100%|##########| 5148/5148 [00:00<00:00, 37163987.94it/s]
    Extracting data/FashionMNIST/raw/t10k-labels-idx1-ubyte.gz to data/FashionMNIST/raw





.. GENERATED FROM PYTHON SOURCE LINES 42-49

ToTensor()
-------------------------------

`ToTensor <https://pytorch.org/vision/stable/transforms.html#torchvision.transforms.ToTensor>`_
converts a PIL image or NumPy ``ndarray`` into a ``FloatTensor``. and scales
the image's pixel intensity values in the range [0., 1.]


.. GENERATED FROM PYTHON SOURCE LINES 51-59

Lambda Transforms
-------------------------------

Lambda transforms apply any user-defined lambda function. Here, we define a function
to turn the integer into a one-hot encoded tensor.
It first creates a zero tensor of size 10 (the number of labels in our dataset) and calls
`scatter_ <https://pytorch.org/docs/stable/generated/torch.Tensor.scatter_.html>`_ which assigns a
``value=1`` on the index as given by the label ``y``.

.. GENERATED FROM PYTHON SOURCE LINES 59-63

.. code-block:: default


    target_transform = Lambda(lambda y: torch.zeros(
        10, dtype=torch.float).scatter_(dim=0, index=torch.tensor(y), value=1))








.. GENERATED FROM PYTHON SOURCE LINES 64-66

--------------


.. GENERATED FROM PYTHON SOURCE LINES 68-71

Further Reading
~~~~~~~~~~~~~~~~~
- `torchvision.transforms API <https://pytorch.org/vision/stable/transforms.html>`_


.. rst-class:: sphx-glr-timing

   **Total running time of the script:** ( 0 minutes  15.253 seconds)


.. _sphx_glr_download_beginner_basics_transforms_tutorial.py:

.. only:: html

  .. container:: sphx-glr-footer sphx-glr-footer-example


    .. container:: sphx-glr-download sphx-glr-download-python

      :download:`Download Python source code: transforms_tutorial.py <transforms_tutorial.py>`

    .. container:: sphx-glr-download sphx-glr-download-jupyter

      :download:`Download Jupyter notebook: transforms_tutorial.ipynb <transforms_tutorial.ipynb>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_
